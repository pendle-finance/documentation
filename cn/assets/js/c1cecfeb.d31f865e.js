"use strict";(self.webpackChunkpendle_documentation=self.webpackChunkpendle_documentation||[]).push([[1692],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>h});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(t),u=a,h=p["".concat(l,".").concat(u)]||p[u]||m[u]||o;return t?n.createElement(h,i(i({ref:r},d),{},{components:t})):n.createElement(h,i({ref:r},d))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1757:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=t(7462),a=(t(7294),t(3905));const o={},i="Cancel Limit Orders",c={unversionedId:"Developers/LimitOrder/CancelOrders",id:"Developers/LimitOrder/CancelOrders",title:"Cancel Limit Orders",description:"Makers can send a transaction to the Limit Order contract to cancel their orders. This action prevents those orders from being settled by the contract.",source:"@site/i18n/cn/docusaurus-plugin-content-docs/current/Developers/LimitOrder/CancelOrders.md",sourceDirName:"Developers/LimitOrder",slug:"/Developers/LimitOrder/CancelOrders",permalink:"/cn/Developers/LimitOrder/CancelOrders",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"myAutogeneratedSidebar",previous:{title:"Create a Limit Order",permalink:"/cn/Developers/LimitOrder/CreateALimitOrder"},next:{title:"Fill a Limit Order",permalink:"/cn/Developers/LimitOrder/FillALimitOrder"}},l={},s=[{value:"Cancel specific order",id:"cancel-specific-order",level:2},{value:"Step 1: Find the maker&#39;s active orders",id:"step-1-find-the-makers-active-orders",level:3},{value:"Step 2: Cancel the orders",id:"step-2-cancel-the-orders",level:3},{value:"Increase nonce",id:"increase-nonce",level:2}],d={toc:s},p="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cancel-limit-orders"},"Cancel Limit Orders"),(0,a.kt)("p",null,"Makers can send a transaction to the Limit Order contract to cancel their orders. This action prevents those orders from being settled by the contract."),(0,a.kt)("p",null,"There are two methods for makers to cancel their orders:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Cancel specific orders: Target individual orders for cancellation."),(0,a.kt)("li",{parentName:"ol"},"Increase nonce: Cancel all orders with a nonce less than the current maker's nonce."),(0,a.kt)("li",{parentName:"ol"},"Pendle provides an API to help makers find their active orders, allowing them to cancel orders more easily.\n",(0,a.kt)("a",{parentName:"li",href:"https://api-v2.pendle.finance/limit-order/docs#/Maker/MakersController_getMakerLimitOrder"},"Get maker's active orders"))),(0,a.kt)("h1",{id:"typescript-example"},"Typescript example"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:"),": The code examples in the guide below are taken from our demo GitHub repository, which demonstrates the complete end-to-end Limit Order processes in a TypeScript environment."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/pendle-finance/limit-order-api-demo"},"Repo")),(0,a.kt)("h2",{id:"cancel-specific-order"},"Cancel specific order"),(0,a.kt)("h3",{id:"step-1-find-the-makers-active-orders"},"Step 1: Find the maker's active orders"),(0,a.kt)("p",null,"To cancel specific orders, you need the data for those orders. Makers can use the Pendle API to retrieve their active order data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"  const requestQuery: LimitOrderMakerQuery = {\n    skip: 0,\n    limit: 10,\n    chainId: ChainId.ARBITRUM,\n    maker: await getSigner().getAddress(),\n    isActive: true\n  }\n\n")),(0,a.kt)("p",null,"You can find a complete example of how to get a maker's active orders in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pendle-finance/limit-order-api-demo"},"API demo repository")),(0,a.kt)("h3",{id:"step-2-cancel-the-orders"},"Step 2: Cancel the orders"),(0,a.kt)("p",null,"Once you have the limit order data, you can send this data to the Limit Order contract to cancel specific orders."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const tx = await contract.cancelSingle(order);\n")),(0,a.kt)("p",null,"You can find a complete example of how to cancel an order in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pendle-finance/limit-order-api-demo"},"API demo repository")),(0,a.kt)("h2",{id:"increase-nonce"},"Increase nonce"),(0,a.kt)("p",null,"Each order has a ",(0,a.kt)("inlineCode",{parentName:"p"},"nonce")," field. When creating a limit order, this field is typically set to the current maker's nonce."),(0,a.kt)("p",null,"All orders with a nonce lower than the current maker's nonce become invalid. Makers can increase their nonce in the Limit Order contract to cancel all orders with a lower nonce (assuming they were created with the maker's nonce at the time of creation)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const tx = await contract.increaseNonces();\n")),(0,a.kt)("p",null,"You can find a complete example of how to increase the nonce in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pendle-finance/limit-order-api-demo"},"API demo repository")))}m.isMDXComponent=!0}}]);