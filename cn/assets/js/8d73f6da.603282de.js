"use strict";(self.webpackChunkpendle_documentation=self.webpackChunkpendle_documentation||[]).push([[3448],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>N});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),d=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=d(t.components);return a.createElement(o.Provider,{value:e},t.children)},k="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),k=d(n),s=r,N=k["".concat(o,".").concat(s)]||k[s]||u[s]||l;return n?a.createElement(N,i(i({ref:e},m),{},{components:n})):a.createElement(N,i({ref:e},m))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=s;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[k]="string"==typeof t?t:r,i[1]=p;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7561:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={hide_table_of_contents:!0},i="Misc Functions",p={unversionedId:"Developers/Contracts/PendleRouter/ApiReference/MiscFunctions",id:"Developers/Contracts/PendleRouter/ApiReference/MiscFunctions",title:"Misc Functions",description:"This document covers core functions for SY/PY operations, reward claiming, exit strategies, and utility functions in Pendle Router.",source:"@site/docs/Developers/Contracts/PendleRouter/ApiReference/MiscFunctions.md",sourceDirName:"Developers/Contracts/PendleRouter/ApiReference",slug:"/Developers/Contracts/PendleRouter/ApiReference/MiscFunctions",permalink:"/cn/Developers/Contracts/PendleRouter/ApiReference/MiscFunctions",draft:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"myAutogeneratedSidebar",previous:{title:"Liquidity Management Functions",permalink:"/cn/Developers/Contracts/PendleRouter/ApiReference/LiquidityFunctions"},next:{title:"Simple Functions",permalink:"/cn/Developers/Contracts/PendleRouter/ApiReference/SimpleFunctions"}},o={},d=[{value:"SY Operations",id:"sy-operations",level:2},{value:"mintSyFromToken",id:"mintsyfromtoken",level:3},{value:"redeemSyToToken",id:"redeemsytotoken",level:3},{value:"Principal/Yield Token Operations",id:"principalyield-token-operations",level:2},{value:"mintPyFromToken",id:"mintpyfromtoken",level:3},{value:"redeemPyToToken",id:"redeempytotoken",level:3},{value:"mintPyFromSy",id:"mintpyfromsy",level:3},{value:"redeemPyToSy",id:"redeempytosy",level:3},{value:"Reward Functions",id:"reward-functions",level:2},{value:"redeemDueInterestAndRewards",id:"redeemdueinterestandrewards",level:3},{value:"redeemDueInterestAndRewardsV2",id:"redeemdueinterestandrewardsv2",level:3},{value:"Token Swapping",id:"token-swapping",level:2},{value:"swapTokensToTokens",id:"swaptokenstotokens",level:3},{value:"swapTokenToTokenViaSy",id:"swaptokentotokenviasy",level:3},{value:"Exit Strategies",id:"exit-strategies",level:2},{value:"exitPreExpToToken",id:"exitpreexptotoken",level:3},{value:"exitPreExpToSy",id:"exitpreexptosy",level:3},{value:"exitPostExpToToken",id:"exitpostexptotoken",level:3},{value:"exitPostExpToSy",id:"exitpostexptosy",level:3},{value:"Utility Functions",id:"utility-functions",level:2},{value:"boostMarkets",id:"boostmarkets",level:3},{value:"multicall",id:"multicall",level:3},{value:"simulate",id:"simulate",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Basic SY Operations",id:"basic-sy-operations",level:3},{value:"Reward Claiming",id:"reward-claiming",level:3},{value:"Complete Position Exit",id:"complete-position-exit",level:3}],m={toc:d},k="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(k,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"misc-functions"},"Misc Functions"),(0,r.kt)("p",null,"This document covers core functions for SY/PY operations, reward claiming, exit strategies, and utility functions in Pendle Router."),(0,r.kt)("h2",{id:"sy-operations"},"SY Operations"),(0,r.kt)("h3",{id:"mintsyfromtoken"},"mintSyFromToken"),(0,r.kt)("p",null,"Mints SY tokens from any supported tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintSyFromToken(\n    address receiver,\n    address SY,\n    uint256 minSyOut,\n    TokenInput calldata input\n) external payable returns (uint256 netSyOut)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive SY tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SY"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"SY token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum SY tokens to receive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#tokeninput"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenInput"))),(0,r.kt)("td",{parentName:"tr",align:null},"Token input configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens received")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nConvert any supported token into SY tokens, which are standardized yield-bearing tokens used throughout the Pendle ecosystem."),(0,r.kt)("h3",{id:"redeemsytotoken"},"redeemSyToToken"),(0,r.kt)("p",null,"Redeems SY tokens back to any supported tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function redeemSyToToken(\n    address receiver,\n    address SY,\n    uint256 netSyIn,\n    TokenOutput calldata output\n) external returns (uint256 netTokenOut)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SY"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"SY token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of SY tokens to redeem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#tokenoutput"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenOutput"))),(0,r.kt)("td",{parentName:"tr",align:null},"Token output configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Tokens received")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nConvert SY tokens back to tokens when you want."),(0,r.kt)("h2",{id:"principalyield-token-operations"},"Principal/Yield Token Operations"),(0,r.kt)("h3",{id:"mintpyfromtoken"},"mintPyFromToken"),(0,r.kt)("p",null,"Mints PT and YT tokens (collectively called PY) from any supported tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintPyFromToken(\n    address receiver,\n    address YT,\n    uint256 minPyOut,\n    TokenInput calldata input\n) external payable returns (uint256 netPyOut, uint256 netSyInterm)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive PT and YT tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YT"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"YT token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minPyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum PY tokens to mint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#tokeninput"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenInput"))),(0,r.kt)("td",{parentName:"tr",align:null},"Token input configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"PT and YT tokens minted (equal amounts)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyInterm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens generated as intermediate step")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nSplit any supported token into separate principal and yield components."),(0,r.kt)("h3",{id:"redeempytotoken"},"redeemPyToToken"),(0,r.kt)("p",null,"Redeems equal amounts of PT and YT tokens back to any supported tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function redeemPyToToken(\n    address receiver,\n    address YT,\n    uint256 netPyIn,\n    TokenOutput calldata output\n) external returns (uint256 netTokenOut, uint256 netSyInterm)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YT"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"YT token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPyIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of PT+YT pairs to redeem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#tokenoutput"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenOutput"))),(0,r.kt)("td",{parentName:"tr",align:null},"Token output configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyInterm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens generated as intermediate step")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nRecombine PT and YT tokens back into any supported token. Requires holding equal amounts of both PT and YT."),(0,r.kt)("h3",{id:"mintpyfromsy"},"mintPyFromSy"),(0,r.kt)("p",null,"Mints PT and YT tokens directly from SY tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function mintPyFromSy(\n    address receiver,\n    address YT,\n    uint256 netSyIn,\n    uint256 minPyOut\n) external returns (uint256 netPyOut)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive PT and YT tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YT"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"YT token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of SY tokens to use")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minPyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum PY tokens to mint")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"PT and YT tokens minted (equal amounts)")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nEfficient splitting of SY tokens into PT and YT when you already have SY tokens."),(0,r.kt)("h3",{id:"redeempytosy"},"redeemPyToSy"),(0,r.kt)("p",null,"Redeems equal amounts of PT and YT tokens back to SY tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function redeemPyToSy(\n    address receiver,\n    address YT,\n    uint256 netPyIn,\n    uint256 minSyOut\n) external returns (uint256 netSyOut)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive SY tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YT"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"YT token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPyIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of PT+YT pairs to redeem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum SY tokens to receive")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens received")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nRecombine PT and YT tokens into SY tokens for further operations within Pendle ecosystem."),(0,r.kt)("h2",{id:"reward-functions"},"Reward Functions"),(0,r.kt)("h3",{id:"redeemdueinterestandrewards"},"redeemDueInterestAndRewards"),(0,r.kt)("p",null,"Claims all pending rewards and interest from SY tokens, YT tokens, and LP positions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function redeemDueInterestAndRewards(\n    address user,\n    address[] calldata sys,\n    address[] calldata yts,\n    address[] calldata markets\n) external\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive rewards")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sys"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of SY token addresses")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"yts"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of YT token addresses")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"markets"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of market addresses")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nBatch claim all rewards across multiple positions. This is the most gas-efficient way to claim rewards from multiple sources."),(0,r.kt)("h3",{id:"redeemdueinterestandrewardsv2"},"redeemDueInterestAndRewardsV2"),(0,r.kt)("p",null,"Advanced reward claiming with token swapping capabilities."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function redeemDueInterestAndRewardsV2(\n    IStandardizedYield[] calldata SYs,\n    RedeemYtIncomeToTokenStruct[] calldata YTs,\n    IPMarket[] calldata markets,\n    IPSwapAggregator pendleSwap,\n    SwapDataExtra[] calldata swaps\n) external returns (uint256[] memory netOutFromSwaps, uint256[] memory netInterests)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SYs"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IStandardizedYield[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of SY contracts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"YTs"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#redeemytincometotokenstruct"},(0,r.kt)("inlineCode",{parentName:"a"},"RedeemYtIncomeToTokenStruct[]"))),(0,r.kt)("td",{parentName:"tr",align:null},"YT redemption configurations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"markets"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IPMarket[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of market contracts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pendleSwap"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IPSwapAggregator")),(0,r.kt)("td",{parentName:"tr",align:null},"Swap aggregator for token conversions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"swaps"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#swapdata"},(0,r.kt)("inlineCode",{parentName:"a"},"SwapDataExtra[]"))),(0,r.kt)("td",{parentName:"tr",align:null},"Swap configurations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netOutFromSwaps"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Tokens received from swaps")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netInterests"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Interest tokens received")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nAdvanced reward claiming that can automatically swap reward tokens to desired tokens. Useful for complex strategies and automated systems."),(0,r.kt)("h2",{id:"token-swapping"},"Token Swapping"),(0,r.kt)("h3",{id:"swaptokenstotokens"},"swapTokensToTokens"),(0,r.kt)("p",null,"Performs multiple token-to-token swaps using external aggregators."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapTokensToTokens(\n    IPSwapAggregator pendleSwap,\n    SwapDataExtra[] calldata swaps,\n    uint256[] calldata netSwaps\n) external payable returns (uint256[] memory netOutFromSwaps)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pendleSwap"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IPSwapAggregator")),(0,r.kt)("td",{parentName:"tr",align:null},"Swap aggregator contract")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"swaps"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SwapDataExtra[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of swap configurations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSwaps"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of input amounts for each swap")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netOutFromSwaps"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Output amounts from each swap")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nBatch multiple token swaps for gas efficiency."),(0,r.kt)("h3",{id:"swaptokentotokenviasy"},"swapTokenToTokenViaSy"),(0,r.kt)("p",null,"Swaps tokens using SY as an intermediate step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapTokenToTokenViaSy(\n    address receiver,\n    address SY,\n    TokenInput calldata input,\n    address tokenRedeemSy,\n    uint256 minTokenOut\n) external payable returns (uint256 netTokenOut, uint256 netSyInterm)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive output tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SY"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"SY token contract address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TokenInput")),(0,r.kt)("td",{parentName:"tr",align:null},"Input token configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tokenRedeemSy"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Output token address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum output tokens to receive")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Output tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyInterm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens used as intermediate")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nSwap between tokens that both support the same SY token, often providing better rates than external DEXes."),(0,r.kt)("h2",{id:"exit-strategies"},"Exit Strategies"),(0,r.kt)("h3",{id:"exitpreexptotoken"},"exitPreExpToToken"),(0,r.kt)("p",null,"Comprehensive position exit before market expiry, converting everything to a single token."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function exitPreExpToToken(\n    address receiver,\n    address market,\n    uint256 netPtIn,\n    uint256 netYtIn,\n    uint256 netLpIn,\n    TokenOutput calldata output,\n    LimitOrderData calldata limit\n) external returns (uint256 totalTokenOut, ExitPreExpReturnParams memory params)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of PT tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netYtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of YT tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netLpIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of LP tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TokenOutput")),(0,r.kt)("td",{parentName:"tr",align:null},"Output token configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#limitorderdata"},(0,r.kt)("inlineCode",{parentName:"a"},"LimitOrderData"))),(0,r.kt)("td",{parentName:"tr",align:null},"Limit order configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"totalTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Total tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"params"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#exitpreexpreturnparams"},(0,r.kt)("inlineCode",{parentName:"a"},"ExitPreExpReturnParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Detailed breakdown of exit operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nComplete portfolio liquidation before expiry. Optimally combines PT+YT pairs and swaps remaining tokens."),(0,r.kt)("h3",{id:"exitpreexptosy"},"exitPreExpToSy"),(0,r.kt)("p",null,"Comprehensive position exit before market expiry, converting everything to SY tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function exitPreExpToSy(\n    address receiver,\n    address market,\n    uint256 netPtIn,\n    uint256 netYtIn,\n    uint256 netLpIn,\n    uint256 minSyOut,\n    LimitOrderData calldata limit\n) external returns (ExitPreExpReturnParams memory params)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive SY tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of PT tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netYtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of YT tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netLpIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of LP tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum SY tokens to receive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#limitorderdata"},(0,r.kt)("inlineCode",{parentName:"a"},"LimitOrderData"))),(0,r.kt)("td",{parentName:"tr",align:null},"Limit order configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"params"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#exitpreexpreturnparams"},(0,r.kt)("inlineCode",{parentName:"a"},"ExitPreExpReturnParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Detailed breakdown of exit operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nPortfolio liquidation to SY tokens, useful when you want to stay within Pendle ecosystem or perform further operations."),(0,r.kt)("h3",{id:"exitpostexptotoken"},"exitPostExpToToken"),(0,r.kt)("p",null,"Position exit after market expiry, when PT tokens can be redeemed 1:1."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function exitPostExpToToken(\n    address receiver,\n    address market,\n    uint256 netPtIn,\n    uint256 netLpIn,\n    TokenOutput calldata output\n) external returns (uint256 totalTokenOut, ExitPostExpReturnParams memory params)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of PT tokens to redeem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netLpIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of LP tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TokenOutput")),(0,r.kt)("td",{parentName:"tr",align:null},"Output token configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"totalTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Total tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"params"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#exitpostexpreturnparams"},(0,r.kt)("inlineCode",{parentName:"a"},"ExitPostExpReturnParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Breakdown of redemption operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nClean exit after maturity when PT tokens are worth face value. Much simpler than pre-expiry exits."),(0,r.kt)("h3",{id:"exitpostexptosy"},"exitPostExpToSy"),(0,r.kt)("p",null,"Position exit after market expiry, converting to SY tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function exitPostExpToSy(\n    address receiver,\n    address market,\n    uint256 netPtIn,\n    uint256 netLpIn,\n    uint256 minSyOut\n) external returns (ExitPostExpReturnParams memory params)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive SY tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netPtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of PT tokens to redeem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netLpIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of LP tokens to exit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum SY tokens to receive")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"params"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#exitpostexpreturnparams"},(0,r.kt)("inlineCode",{parentName:"a"},"ExitPostExpReturnParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Breakdown of redemption operations")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nPost-expiry exit to SY tokens, maintaining position within Pendle ecosystem."),(0,r.kt)("h2",{id:"utility-functions"},"Utility Functions"),(0,r.kt)("h3",{id:"boostmarkets"},"boostMarkets"),(0,r.kt)("p",null,"Triggers market updates to refresh boost multipliers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function boostMarkets(address[] memory markets) external\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"markets"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of market addresses to boost")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nRefresh boost calculations for multiple markets in a single transaction."),(0,r.kt)("h3",{id:"multicall"},"multicall"),(0,r.kt)("p",null,"Executes multiple function calls in a single transaction."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function multicall(Call3[] calldata calls) external payable returns (Result[] memory res)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"calls"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Call3[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Array of function calls to execute")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"res"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Result[]")),(0,r.kt)("td",{parentName:"tr",align:null},"Results from each function call")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nBatch multiple operations for gas efficiency and atomic execution."),(0,r.kt)("h3",{id:"simulate"},"simulate"),(0,r.kt)("p",null,"Simulates function execution without state changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function simulate(address target, bytes calldata data) external payable\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Contract address to simulate")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"data"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes")),(0,r.kt)("td",{parentName:"tr",align:null},"Encoded function call data")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nTest function execution and get return values without actually executing the transaction."),(0,r.kt)("h2",{id:"integration-examples"},"Integration Examples"),(0,r.kt)("h3",{id:"basic-sy-operations"},"Basic SY Operations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// Mint SY-sUSDe from USDe\nrouter.mintSyFromToken(\n    msg.sender,\n    SY_USDE_ADDRESS,\n    minSyOut,\n    createTokenInputSimple(USDE_ADDRESS, 1000e18)\n);\n\n// Redeem SY-sUSDe back to USDE\nrouter.redeemSyToToken(\n    msg.sender,\n    SY_USDE_ADDRESS,\n    syAmount,\n    createTokenOutputSimple(USDE_ADDRESS, minUsdeOut)\n);\n")),(0,r.kt)("h3",{id:"reward-claiming"},"Reward Claiming"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// Claim all rewards\naddress[] memory sys = new address[](1);\naddress[] memory yts = new address[](1);\naddress[] memory markets = new address[](1);\nsys[0] = SY_ADDRESS;\nyts[0] = YT_ADDRESS;\nmarkets[0] = MARKET_ADDRESS;\n\nrouter.redeemDueInterestAndRewards(msg.sender, sys, yts, markets);\n")),(0,r.kt)("h3",{id:"complete-position-exit"},"Complete Position Exit"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// Exit all positions before expiry\nrouter.exitPreExpToToken(\n    msg.sender,\n    MARKET_ADDRESS,\n    ptAmount,\n    ytAmount,\n    lpAmount,\n    createTokenOutputSimple(USDC_ADDRESS, minUsdcOut),\n    createEmptyLimitOrderData()\n);\n")))}u.isMDXComponent=!0}}]);