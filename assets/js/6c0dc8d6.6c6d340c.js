"use strict";(self.webpackChunkpendle_documentation=self.webpackChunkpendle_documentation||[]).push([[9943],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),s=d(n),k=r,c=s["".concat(p,".").concat(k)]||s[k]||m[k]||l;return n?a.createElement(c,i(i({ref:e},u),{},{components:n})):a.createElement(c,i({ref:e},u))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7459:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={hide_table_of_contents:!0},i="Yield Token (YT) Trading Functions",o={unversionedId:"Developers/Contracts/PendleRouter/ApiReference/YtFunctions",id:"Developers/Contracts/PendleRouter/ApiReference/YtFunctions",title:"Yield Token (YT) Trading Functions",description:"This document covers all functions for trading Yield Tokens (YT) in Pendle markets. YT tokens represent the yield portion of yield-bearing assets and can be traded against other tokens or SY tokens.",source:"@site/docs/Developers/Contracts/PendleRouter/ApiReference/YtFunctions.md",sourceDirName:"Developers/Contracts/PendleRouter/ApiReference",slug:"/Developers/Contracts/PendleRouter/ApiReference/YtFunctions",permalink:"/Developers/Contracts/PendleRouter/ApiReference/YtFunctions",draft:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"myAutogeneratedSidebar",previous:{title:"Principal Token (PT) Trading Functions",permalink:"/Developers/Contracts/PendleRouter/ApiReference/PtFunctions"},next:{title:"Liquidity Management Functions",permalink:"/Developers/Contracts/PendleRouter/ApiReference/LiquidityFunctions"}},p={},d=[{value:"Token to YT Trading",id:"token-to-yt-trading",level:2},{value:"swapExactTokenForYt",id:"swapexacttokenforyt",level:3},{value:"swapExactSyForYt",id:"swapexactsyforyt",level:3},{value:"YT to Token Trading",id:"yt-to-token-trading",level:2},{value:"swapExactYtForToken",id:"swapexactytfortoken",level:3},{value:"swapExactYtForSy",id:"swapexactytforsy",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Buying YT-sUSDe with USDe",id:"buying-yt-susde-with-usde",level:3},{value:"Selling YT-sUSDe for USDe",id:"selling-yt-susde-for-usde",level:3},{value:"Direct SY to YT Trading",id:"direct-sy-to-yt-trading",level:3}],u={toc:d},s="wrapper";function m(t){let{components:e,...n}=t;return(0,r.kt)(s,(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"yield-token-yt-trading-functions"},"Yield Token (YT) Trading Functions"),(0,r.kt)("p",null,"This document covers all functions for trading Yield Tokens (YT) in Pendle markets. YT tokens represent the yield portion of yield-bearing assets and can be traded against other tokens or SY tokens."),(0,r.kt)("h2",{id:"token-to-yt-trading"},"Token to YT Trading"),(0,r.kt)("p",null,"Since AMM only supports swaps by exact YT, to swap exact tokens for YT requires binary search approximation to find the correct amount of SY needed to achieve the desired YT output. For best usage, use the ",(0,r.kt)("a",{parentName:"p",href:"/Developers/Backend/BackendAndHostedSDK#features"},"SDK")," for better approximation since running binary search on-chain is costly."),(0,r.kt)("h3",{id:"swapexacttokenforyt"},"swapExactTokenForYt"),(0,r.kt)("p",null,"Swaps an exact amount of any supported token for YT tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapExactTokenForYt(\n    address receiver,\n    address market,\n    uint256 minYtOut,\n    ApproxParams calldata guessYtOut,\n    TokenInput calldata input,\n    LimitOrderData calldata limit\n) external payable returns (uint256 netYtOut, uint256 netSyFee, uint256 netSyInterm)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive YT tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minYtOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum YT tokens to receive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"guessYtOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#approxparams"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproxParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Approximation parameters")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#tokeninput"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenInput"))),(0,r.kt)("td",{parentName:"tr",align:null},"Token input configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#limitorderdata"},(0,r.kt)("inlineCode",{parentName:"a"},"LimitOrderData"))),(0,r.kt)("td",{parentName:"tr",align:null},"Limit order configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netYtOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"YT tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyFee"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Trading fees paid in SY")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyInterm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens generated from input token")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nMost common function for buying YT tokens with any supported token. The function converts your token to SY and then swaps SY for YT, first filling available limit orders, then using the AMM for any remaining amount."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Simple Version Available"),"\nFor basic operations without custom parameters, use ",(0,r.kt)("a",{parentName:"p",href:"/Developers/Contracts/PendleRouter/ApiReference/SimpleFunctions#swapexacttokenforytSimple"},(0,r.kt)("inlineCode",{parentName:"a"},"swapExactTokenForYtSimple"))," which automatically handles approximation and skips limit order functionality."),(0,r.kt)("h3",{id:"swapexactsyforyt"},"swapExactSyForYt"),(0,r.kt)("p",null,"Swaps an exact amount of SY tokens for YT tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapExactSyForYt(\n    address receiver,\n    address market,\n    uint256 exactSyIn,\n    uint256 minYtOut,\n    ApproxParams calldata guessYtOut,\n    LimitOrderData calldata limit\n) external returns (uint256 netYtOut, uint256 netSyFee)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive YT tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exactSyIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Exact amount of SY tokens to swap")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minYtOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum YT tokens to receive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"guessYtOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#approxparams"},(0,r.kt)("inlineCode",{parentName:"a"},"ApproxParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Approximation parameters")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#limitorderdata"},(0,r.kt)("inlineCode",{parentName:"a"},"LimitOrderData"))),(0,r.kt)("td",{parentName:"tr",align:null},"Limit order configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netYtOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"YT tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyFee"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Trading fees paid in SY")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nDirect and efficient method when you already have SY tokens and want to buy YT tokens."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Simple Version Available"),"\nFor basic operations without custom parameters, use ",(0,r.kt)("a",{parentName:"p",href:"/Developers/Contracts/PendleRouter/ApiReference/SimpleFunctions#swapexactsyforytSimple"},(0,r.kt)("inlineCode",{parentName:"a"},"swapExactSyForYtSimple"))," which automatically handles approximation and skips limit order functionality."),(0,r.kt)("h2",{id:"yt-to-token-trading"},"YT to Token Trading"),(0,r.kt)("h3",{id:"swapexactytfortoken"},"swapExactYtForToken"),(0,r.kt)("p",null,"Swaps an exact amount of YT tokens for any supported token."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapExactYtForToken(\n    address receiver,\n    address market,\n    uint256 exactYtIn,\n    TokenOutput calldata output,\n    LimitOrderData calldata limit\n) external returns (uint256 netTokenOut, uint256 netSyFee, uint256 netSyInterm)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exactYtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Exact amount of YT tokens to swap")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#tokenoutput"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenOutput"))),(0,r.kt)("td",{parentName:"tr",align:null},"Token output configuration")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#limitorderdata"},(0,r.kt)("inlineCode",{parentName:"a"},"LimitOrderData"))),(0,r.kt)("td",{parentName:"tr",align:null},"Limit order configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netTokenOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Amount tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyFee"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Trading fees paid in SY")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyInterm"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens before conversion")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nMost common function for selling YT tokens to receive tokens. The function swaps YT for SY (first filling available limit orders, then using the AMM), then converts SY to your desired token."),(0,r.kt)("h3",{id:"swapexactytforsy"},"swapExactYtForSy"),(0,r.kt)("p",null,"Swaps an exact amount of YT tokens for SY tokens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function swapExactYtForSy(\n    address receiver,\n    address market,\n    uint256 exactYtIn,\n    uint256 minSyOut,\n    LimitOrderData calldata limit\n) external returns (uint256 netSyOut, uint256 netSyFee)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Input Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"receiver"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address to receive SY tokens")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"market"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Pendle market address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exactYtIn"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Exact amount of YT tokens to swap")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"minSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum SY tokens to receive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/Developers/Contracts/PendleRouter/ApiReference/types#limitorderdata"},(0,r.kt)("inlineCode",{parentName:"a"},"LimitOrderData"))),(0,r.kt)("td",{parentName:"tr",align:null},"Limit order configuration")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Return Values")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyOut"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"SY tokens received")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"netSyFee"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Trading fees paid in SY")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use Case"),"\nDirect and efficient method for selling YT tokens to receive SY tokens."),(0,r.kt)("h2",{id:"integration-examples"},"Integration Examples"),(0,r.kt)("h3",{id:"buying-yt-susde-with-usde"},"Buying YT-sUSDe with USDe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// Swap 1000 USDe for YT-sUSDe tokens\nrouter.swapExactTokenForYt(\n    msg.sender,\n    PT_SUSDE_MARKET_ADDRESS,\n    minYtOut,\n    createDefaultApproxParams(),\n    createTokenInputSimple(USDE_ADDRESS, 1000e18),\n    createEmptyLimitOrderData()\n);\n")),(0,r.kt)("h3",{id:"selling-yt-susde-for-usde"},"Selling YT-sUSDe for USDe"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// Swap YT-sUSDe tokens for USDe\nrouter.swapExactYtForToken(\n    msg.sender,\n    PT_SUSDE_MARKET_ADDRESS,\n    ytAmount,\n    createTokenOutputSimple(USDE_ADDRESS, minUsdeOut),\n    createEmptyLimitOrderData()\n);\n")),(0,r.kt)("h3",{id:"direct-sy-to-yt-trading"},"Direct SY to YT Trading"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// Swap SY tokens directly for YT tokens\nrouter.swapExactSyForYt(\n    msg.sender,\n    MARKET_ADDRESS,\n    syAmount,\n    minYtOut,\n    createDefaultApproxParams(),\n    createEmptyLimitOrderData()\n);\n")))}m.isMDXComponent=!0}}]);